function maximize_content_friends(friends, n, bikes, m)
    // Sort friends by greed factor
    Sort(friends, n, by_greed_factor)
    // Sort bikes by performance factor
    Sort(bikes, m, by_performance_factor)
    friend_pointer = 0
    bike_pointer = 0
    Initialize hash_map
    content_count = 0

    // Assign bikes to friends
    While friend_pointer < n and bike_pointer < m:
        // Find the first bike that meets or exceeds the friend's greed factor
        While bike_pointer<m and bikes[bike_pointer] < friends[friend_pointer]:
            bike_pointer = bike_pointer + 1


        If bike_pointer<m
            // Assign the bike
            S = bikes[bike_pointer] - friends[friend_pointer]
            If S >= 0
                // The friend is content
                content_count = content_count + 1
                Insert into hash_map with key S and value bike_pointer
                friend_pointer = friend_pointer + 1
            Else
                // Handle the case where the friend is not content
                Insert into hash_map with key S and value bike_pointer
                friend_pointer = friend_pointer + 1
            End If
            bike_pointer = bike_pointer + 1
        End If
    End While

    // Check for unsatisfied friends and try to reassign bikes
    For i = 0 to HASH_MAP_SIZE - 1
        entry = hash_map[i]
        While entry is not NULL

            If entry.satisfaction< 0
                Find a better bike and swap if needed
            End If

            temp = entry
            entry = entry.next
            Free temp
        End While
    End For

End function
